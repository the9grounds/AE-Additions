buildscript {
    repositories {
        flatDir {
            dirs 'libs'
        }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://files.minecraftforge.net/maven"}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
//        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
}

apply plugin: 'net.minecraftforge.gradle.forge'
//apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'com.matthewprenger.cursegradle'

ext.buildProps = file "gradle.properties"

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = getVersion()
group = "com.the9grounds.aeadditions"
archivesBaseName = "AEAdditions-${config.version.minecraft}"
def actualVersion = version

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

logger.lifecycle "$archivesBaseName-$version"
logger.lifecycle "" + version

minecraft {
    version = "${config.version.minecraft}-${config.version.forge}"
    runDir = "run"
    mappings = 'snapshot_20180814'

    replace "@VERSION@", actualVersion
}

repositories {
    gradlePluginPortal()
    maven {
        url "http://maven.shadowfacts.net/"
    }
    maven {
        name 'Mobius Repo'
        url "https://www.mobiusstrip.eu/maven/"
    }

    maven {
        name 'Ender IO'
        url = "https://maven.tterrag.com/"
    }

    maven {
        name 'Open Computers'
        url "https://maven.cil.li/"
    }

    maven {
        name 'prog'
        url "https://dvs1.progwml6.com/files/maven/"
    }

    maven {
        name 'amadornes'
        url "https://maven.amadornes.com/"
    }

    maven  {
        name "BuildCraft Maven"
        url "https://mod-buildcraft.com/maven/"
    }

    maven {
        name = "CoFH Maven"
        url = "https://maven.covers1624.net/"
    }

    maven {
        name = 'IGW'
        url = "https://maven.k-4u.nl/"
    }

    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven { url = "https://www.cursemaven.com" }
    maven { url = "https://maven.hypherionmc.me/" }
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-reflect:${config.kotlin_version}"
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${config.kotlin_version}"

    compile group: "net.shadowfacts", name: "Forgelin", version: "1.8.4"

    deobfProvided ("mcp.mobius.waila:Hwyla:${config.version.waila}:api") {
        transitive = false
    }

    deobfCompile "cofh:RedstoneFlux:${config.version.rf}:universal"

    compileOnly ("cofh:CoFHCore:${config.version.cofh}:deobf") {
        transitive = false
    }

    //deobfProvided ("li.cil.oc:OpenComputers:${config.version.oc}:api")
    deobfProvided ("li.cil.oc:OpenComputers:${config.version.oc}")

    deobfProvided "mezz.jei:jei_${config.version.minecraft}:${config.version.jei}:api"
//    runtime "mezz.jei:jei_${config.version.minecraft}:${config.version.jei}"

    deobfProvided "com.mod-buildcraft:buildcraft-api:${config.version.bc}"
    runtime "com.mod-buildcraft:buildcraft:${config.version.bc}"

//    deobfCompile "igwmod:IGW-Mod-${config.version.minecraft}:${config.version.igw}:universal"

//    deobfCompile "mekanism:Mekanism:${config.version.me}"
    deobfCompile "curse.maven:mekanism-268560:${config.version.me}"
    deobfCompile "p455w0rd:p455w0rdslib:${config.version.pl}"
    deobfCompile "p455w0rd:AE2WTLib:${config.version.wt}:api"
    runtime "p455w0rd:AE2WTLib:${config.version.wt}"
    compileOnly "p455w0rd:WirelessCraftingTerminal:${config.version.wc}:api"
    runtime "p455w0rd:WirelessCraftingTerminal:${config.version.wc}"

    deobfProvided "curse.maven:gas-conduits-309756:3328809"

//    deobfCompile ("appeng:appliedenergistics2:${config.version.ae}:api"){
//        transitive = false
//    }
    deobfCompile "curse.maven:applied-energistics-2-223794:2747063"

    deobfCompile "MCMultiPart2:MCMultiPart:${config.version.mcmp}"
//    deobfCompile "baubles:Baubles:1.12:${config.version.baubles}"
    deobfCompile "curse.maven:baubles-227083:${config.version.baubles}"

    deobfProvided ("com.enderio:EnderIO:1.12.2-5.3.70:api") {
        transitive = false
    }

    deobfProvided ("com.enderio:EnderIO:1.12.2-5.3.70") {
        transitive = false
    }

    deobfProvided "com.enderio.core:EnderCore:1.12.2-0.5.76"

    compile "info.loenwind.autoconfig:AutoConfig:1.12.2-1.0.2"
    compile "info.loenwind.autosave:AutoSave:1.12.2-1.0.11"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.lang'
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.lang'
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task apiJar(type: Jar) {
    classifier = 'api'
    from sourceSets.main.output
    from sourceSets.main.java
    from sourceSets.main.kotlin
    include 'com/the9grounds/aeadditions/api/**'
}

if (System.getenv("CURSEFORGE_API_KEY") != null) {
    curseforge {
        apiKey = System.getenv("CURSEFORGE_API_KEY")

        def localReleaseType = getReleaseType()

        project {
            id = config.cf.project.id
            addGameVersion config.version.minecraft
            changelogType = "markdown"
            changelog = file('CHANGELOG.md')
            releaseType = localReleaseType
            relations {
                requiredDependency 'applied-energistics-2'
                requiredDependency 'shadowfacts-forgelin'
                incompatible 'extra-cells-2-samlam140330s-fork'
                incompatible 'extracells2'
                incompatible 'xcpatch'
            }
            addArtifact(apiJar) {
                releaseType = 'alpha'
            }
            mainArtifact(jar) {
                displayName = "$archivesBaseName-${version}"
            }
        }
    }
}

sourceJar.duplicatesStrategy = DuplicatesStrategy.EXCLUDE
apiJar.duplicatesStrategy = DuplicatesStrategy.EXCLUDE
jar.duplicatesStrategy = DuplicatesStrategy.EXCLUDE

artifacts {
    archives apiJar
}

def getBuildNumber() {

    if (System.getenv("CI") == null) {
        return "LOCAL"
    }

    if (System.getenv("TAG") != null) {
        return null
    }

    if (System.getenv("GITHUB_HEAD_REF") != null) {
        return "pr-${System.getenv("GITHUB_HEAD_REF")}-${System.getenv("SHORT_SHA")}"
    }

    return "ci-${System.getenv("BRANCH_NAME")}-${System.getenv("SHORT_SHA")}"
}

def getVersion() {
    def buildNumber = getBuildNumber()

    if (buildNumber == null) {
        def tag = System.getenv("TAG")

        return "${tag}"
    }

    return buildNumber
}

def getReleaseType() {
    def preReleaseEnv = System.getenv("PRERELEASE")

    if (preReleaseEnv == null) {
        return "beta"
    }

    def preRelease = Boolean.parseBoolean(preReleaseEnv)

    if (preRelease) {
        return "beta"
    }

    return "release"
}

tasks.test {
    enabled = gradle.startParameter.taskNames.contains("test")
}

idea {
    module {
        outputDir = file('build/classes/main')
    }
}

def copy = tasks.create("copyResourceToClasses", Copy) {
    into("$buildDir/classes/kotlin/main")
    from(tasks.processResources.destinationDir)
}
copy.dependsOn(tasks.processResources)
tasks.classes.dependsOn(copy)